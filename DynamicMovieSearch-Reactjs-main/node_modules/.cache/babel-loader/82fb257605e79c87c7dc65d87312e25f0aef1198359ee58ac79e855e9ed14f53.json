{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jugal\\\\Downloads\\\\DynamicMovieSearch-Reactjs-main\\\\DynamicMovieSearch-Reactjs-main\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport Card from './components/Movies/Card';\nimport Player from './components/Movies/Player';\nimport Error from './components/Error';\nimport LoaderGif from './assets/Loader.gif';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.PlayerTrigger = (e, item) => {\n      // Trigger player to show data once user clicked any card\n      this.setState({\n        player: true,\n        playerOffsetParent: e.target.offsetParent.closest(\".card-body\").classList[1],\n        playerData: item\n      });\n    };\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      movies: [],\n      player: false,\n      playerOffsetParent: false,\n      playerData: [],\n      screenWidth: 1700\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://peaceful-forest-62260.herokuapp.com/\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result,\n        movies: result.moviesData\n      });\n      console.log(2);\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n      console.log(1);\n    });\n\n    // To check the screen width of window to make card listing responsive\n    window.addEventListener('resize', () => {\n      this.setState({\n        screenWidth: window.innerWidth\n      });\n    });\n  }\n  componentDidUpdate() {\n    // scroll window to the position of Player-Wrapper parent element once user clicked any card\n    this.state.playerOffsetParent && document.querySelector(`.${this.state.playerOffsetParent}`).scrollIntoView({\n      behavior: 'smooth',\n      block: 'start'\n    });\n  }\n  render() {\n    // Adding defined set of card in a row on the basis of screen width\n    // and wrap row with class cards to show player just beneath the row when a movie card is clicked\n    let rows = Object.keys(this.state.movies).map((item, key) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        PlayerTrigger: this.PlayerTrigger,\n        ...this.state.movies[item]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this);\n    }).reduce((arr, element, index) => {\n      //set cards in a row depending on screen width\n      if (this.state.screenWidth > 1650) {\n        var groupSize = 6;\n      } else if (this.state.screenWidth > 1300 && this.state.screenWidth < 1650) {\n        var groupSize = 3;\n      } else if (this.state.screenWidth > 800 && this.state.screenWidth < 1300) {\n        var groupSize = 2;\n      } else {\n        var groupSize = 1;\n      }\n\n      // create element groups\n      index % groupSize === 0 && arr.push([]);\n      arr[arr.length - 1].push(element);\n      return arr;\n    }, []).map((rowContent, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card-body cards${key}`,\n        children: [this.state.player && `cards${key}` === this.state.playerOffsetParent && /*#__PURE__*/_jsxDEV(Player, {\n          playerOffsetParent: this.state.playerOffsetParent,\n          ...this.state.playerData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cards`,\n          children: rowContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    });\n    if (this.state.isLoaded) {\n      if (this.state.error) {\n        return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-container\",\n            children: rows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: LoaderGif\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 14\n      }, this);\n    }\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Header","Card","Player","Error","LoaderGif","jsxDEV","_jsxDEV","App","constructor","props","PlayerTrigger","e","item","setState","player","playerOffsetParent","target","offsetParent","closest","classList","playerData","state","error","isLoaded","items","movies","screenWidth","componentDidMount","fetch","then","res","json","result","moviesData","console","log","window","addEventListener","innerWidth","componentDidUpdate","document","querySelector","scrollIntoView","behavior","block","render","rows","Object","keys","map","key","fileName","_jsxFileName","lineNumber","columnNumber","reduce","arr","element","index","groupSize","push","length","rowContent","className","children","src"],"sources":["C:/Users/jugal/Downloads/DynamicMovieSearch-Reactjs-main/DynamicMovieSearch-Reactjs-main/src/App.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Header from './components/Header';\nimport Card from './components/Movies/Card';\nimport Player from './components/Movies/Player';\nimport Error from './components/Error';\nimport LoaderGif from './assets/Loader.gif'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      movies: [],\n      player: false,\n      playerOffsetParent: false,\n      playerData: [],\n      screenWidth: 1700\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://peaceful-forest-62260.herokuapp.com/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result,\n            movies: result.moviesData\n          });\n          console.log(2);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n          console.log(1);\n        }\n      )\n\n      // To check the screen width of window to make card listing responsive\n      window.addEventListener('resize', () => {\n        this.setState({screenWidth: window.innerWidth})\n      });\n  }\n\n  PlayerTrigger = (e, item) => {\n    // Trigger player to show data once user clicked any card\n    this.setState({ player: true, playerOffsetParent: e.target.offsetParent.closest(\".card-body\").classList[1], playerData: item})\n  }\n\n  componentDidUpdate(){\n    // scroll window to the position of Player-Wrapper parent element once user clicked any card\n    this.state.playerOffsetParent && document.querySelector(`.${this.state.playerOffsetParent}`).scrollIntoView({ behavior: 'smooth', block: 'start'})\n  }\n  render() {\n    // Adding defined set of card in a row on the basis of screen width\n    // and wrap row with class cards to show player just beneath the row when a movie card is clicked\n    let rows = Object.keys(this.state.movies).map((item, key) => {\n      return (\n        <Card key={key} PlayerTrigger={this.PlayerTrigger} {...this.state.movies[item]} />\n      )\n    }).reduce((arr, element, index) => {\n      //set cards in a row depending on screen width\n      if(this.state.screenWidth > 1650) {\n        var groupSize = 6;\n      } else if(this.state.screenWidth > 1300 && this.state.screenWidth < 1650){\n        var groupSize = 3;\n      } else if(this.state.screenWidth > 800 && this.state.screenWidth < 1300){\n        var groupSize = 2;\n      } else {\n        var groupSize = 1;\n      }\n\n      // create element groups\n      index % groupSize === 0 && arr.push([]);\n      arr[arr.length - 1].push(element);\n      return arr;\n    },[]).map((rowContent, key) => {\n        return (\n        <div className={`card-body cards${key}`} key={key}>\n\n            {/* showing player on card click */}\n            {this.state.player && `cards${key}` === this.state.playerOffsetParent && (\n              <Player playerOffsetParent={this.state.playerOffsetParent}  {...this.state.playerData}  />\n            )}\n\n            {/* surround every group with 'cards./' */}\n            <div className={`cards`}>{rowContent}</div>\n        </div>\n        );\n    });\n\n    if(this.state.isLoaded) {\n      if(this.state.error) {\n        return <Error />\n      } else {\n        return  (\n          <section >\n            <Header />\n            <div className=\"movies-container\">{rows}</div>\n          </section>\n        );\n      }\n    } else {\n      return <div className=\"loader\"><img src={LoaderGif} /></div>;\n    }\n  }\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}